- provide(:title, @moving.title)

%h1.page-header
  = @moving.title
  = link_to "Edit", edit_moving_path(@moving), class: "btn btn-primary btn-sm pull-right"
  %br/
  %small= @moving.description

%ol.breadcrumb
  %li= link_to "Dashboard", root_path, :"data-no-turbolink" => true
  %li= link_to "My movings", movings_path
  %li.active= @moving.title

.row
  .col-sm-6
    = kv_table_for %w(category volume), @moving.moving_items.group(:category).sum(:volume)
  .col-sm-6
    = kv_table_for %w(room volume), @moving.moving_items.group(:room).sum(:volume)

-# By default, #tabs_table_all_items is active.
-# Exceptionally, when the page is re-rendered by MovingItemsController, #tabs_add_form is activated.

-# classes for tabs
- active_tab      = "active"
- active_content  = %w[tab-pane fade active in]
- default_tab     = ""
- default_content = %w[tab-pane fade]

/ Tabs
%ul{ class: "nav nav-tabs", role: 'tablist', id: "tabs_movings" }
  %li{ class: active_tab }
    %a{ href: "#tabs_1", role: "tab", data: { toggle: "tab" } }
      All items
  %li{ class: default_tab }
    %a{ href: "#tabs_2", role: "tab", data: { toggle: "tab" } }
      Add item

/ Tab Contents
/   .fade : enables animation.
/   .in   : ensures it's shown when the page is loaded.
.tab-content
  #tabs_1{ class: active_content }
    - if @moving_items.count > 0
      = react_component 'Records', { data: @moving_items }
      / = render 'moving_items/table_moving_items'
    - else
      %p{ style: "margin: 16px;" } No item found
  #tabs_2{ class: default_content }
    = render 'moving_items/add_form'

:coffee

  jQuery ->
    $('#tabs_movings li:eq(1) a').tab('show') if #{params[:controller] == 'moving_items'}

:css

  #tabs_2 {
    padding-top: 20px
  }
