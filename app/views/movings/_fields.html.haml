/ data for autocomplete suggestions
= content_tag :div, "", id: "suggestions", data: { us_states: us_states }

#movings_fields

  .row

    .form-group.col-sm-6
      = f.label :title, "Moving project name", class: "h4"
      = f.text_field :title, value: "My moving", class: 'form-control'
    .clearfix

  .row

    .form-group.col-sm-6
      = f.label :move_date, "Moving date", class: "h4"
      = f.date_field :move_date, class: 'form-control'

    .form-group.col-sm-6
      = f.label :move_type, "Moving type", class: "h4"
      = f.select :move_type, move_types, { include_blank: "- Select one -" }, class: 'form-control'

  %h2 Current residence

  .row

    .form-group.col-sm-6
      = f.label :dwelling_type, "Dwelling type", class: "h4"
      = f.select :dwelling_type, dwelling_types, { include_blank: "- Select one -" }, class: 'form-control'

    .form-group.col-sm-6
      = f.label :dwelling_sqft, "Square footage", class: "h4"
      .input-group
        = f.number_field :dwelling_sqft, value: 0, min: 0, max: 99999, step: 50, class: 'form-control'
        .input-group-addon sq.ft

  .row

    .table-responsive.col-sm-12
      %table.table.table-condensed
        %thead
          %tr
            %th{ colspan: 4 }
              %label.h4 Rooms
        %tbody
          = f.hidden_field :rooms, multiple: true, value: nil
          - Room.limit(20).pluck(:id, :name).each_slice(4) do |slices|
            %tr
              - slices.each do |room_id, room_name|
                - options = { multiple: true,
                              checked: @moving.rooms.map(&:id).include?(room_id) }
                - checked_value, unchecked_value = room_id, nil
                %td
                  .form-inline
                    .checkbox
                      %label
                        = f.check_box :rooms, options, checked_value, unchecked_value
                        = room_name

  .row

    .moving_from.col-sm-6
      %h2 Moving from

      .form-group
        = f.label :country_from, "Country", class: "h4"
        = f.select :country_from, countries, { include_blank: "- Select one -" }, class: 'form-control'

      .form-group
        = f.label :street_from, "Street", class: "h4"
        = f.text_field :street_from, class: "form-control"

      .form-group
        = f.label :city_from, "City", class: "h4"
        = f.text_field :city_from, class: "form-control"

      .form-group
        = f.label :state_from, "Province/State", class: "h4"
        = f.text_field :state_from, class: "state form-control"

      .form-group
        = f.label :zip_from, "Postal/Zip code", class: "h4"
        = f.text_field :zip_from, class: "form-control"

    .moving_to.col-sm-6
      %h2 Moving to

      .form-group
        = f.label :country_to, "Country", class: "h4"
        = f.select :country_to, countries, { include_blank: "- Select one -" }, class: 'form-control'

      .form-group
        = f.label :street_to, "Street", class: "h4"
        = f.text_field :street_to, class: "form-control"

      .form-group
        = f.label :city_to, "City", class: "h4"
        = f.text_field :city_to, class: "form-control"

      .form-group
        = f.label :state_to, "Province/State", class: "h4"
        = f.text_field :state_to, class: "state form-control"

      .form-group
        = f.label :zip_to, "Postal/Zip code", class: "h4"
        = f.text_field :zip_to, class: 'form-control'

  .row

    .col-sm-12
      %h2 Memo
      .form-group
        = f.text_area :description, class: 'form-control', cols: 20, rows: 3;

  / :coffee

  /   jQuery ->
  /     $from = $('#moving_country_from')
  /     $from.change ->
  /       switch $from.children("option").filter(":selected").text()
  /         when "United States" then params = { source: #{us_states} }
  /         else                      params = { source: [] }
  /       $('#moving_state_from').autocomplete(params)

  /     $to = $('#moving_country_to')
  /     $to.change ->
  /       switch $to.children("option").filter(":selected").text()
  /         when "United States" then params = { source: #{us_states} }
  /         else                      params = { source: [] }
  /       $('#moving_state_to').autocomplete(params)
